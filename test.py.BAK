# Класс мебели
class Furniture:
    def __init__(self, name, action, effects=None):
        """
        name: Название мебели
        action: Описание действия
        effects: Словарь с изменением характеристик игрока
        """
        self.name = name
        self.action = action
        self.effects = effects if effects else {}

    def interact(self, player):
        """Взаимодействие с мебелью"""
        print(f"Вы взаимодействуете с {self.name}: {self.action}")
        for attr, change in self.effects.items():
            current_value = getattr(player, attr, None)
            if current_value is not None:
                new_value = max(0, min(current_value + change, 100))  # Ограничение 0-100
                setattr(player, attr, new_value)
        print("Ваши характеристики обновлены!")


# Класс игрока
class Player:
    def __init__(self, studentName):
        self.name = studentName
        self.health = 100
        self.mood = 50
        self.study = 0
        self.coords = None  # Текущая комната

    def move(self, room):
        """Перемещение игрока в другую комнату"""
        self.coords = room
        print(f"\n{self.name} переместился в: {room.name}")

    def show_stats(self):
        """Показать текущие характеристики игрока"""
        print(f"\n{self.name} - Характеристики:")
        print(f"  Здоровье: {self.health}")
        print(f"  Настроение: {self.mood}")
        print(f"  Учеба: {self.study}")

    def interact_with_furniture(self):
        """Взаимодействие с мебелью в текущей комнате"""
        if not self.coords.furniture:
            print("В этой комнате нет ничего, с чем можно взаимодействовать.")
            return

        print("\nС чем вы хотите взаимодействовать?")
        for i, furniture in enumerate(self.coords.furniture):
            print(f"{i + 1}. {furniture.name}")

        try:
            choice = int(input("> ")) - 1
            if 0 <= choice < len(self.coords.furniture):
                self.coords.furniture[choice].interact(self)
            else:
                print("Неверный выбор. \n")
        except ValueError:
            print("Введите число, соответствующее номеру предмета. \n")


# Класс комнаты
class Room:
    def __init__(self, roomName, descr, doors=None, furniture=None):
        self.name = roomName
        self.descr = descr
        self.doors = doors if doors else []
        self.furniture = furniture if furniture else []

    def describe(self):
        print(f"Вы находитесь в: {self.name}")
        print(self.descr)
        if self.doors:
            print("Двери ведут в:")
            for door in self.doors:
                print(f"- {door.name}")
        """
        if self.furniture:
            print("Мебель в комнате:")
            for item in self.furniture:
                print(f"- {item.name}")
        """

# Создание мебели
bed = Furniture("Кровать", "Вы ложитесь и немного отдыхаете.", effects={"mood": 20, "health": 10})
table = Furniture("Стол", "Вы садитесь за стол и начинаете учиться.", effects={"study": 10, "mood": -5})
mirror = Furniture("Зеркало", "Вы смотрите на свое отражение.", effects={"mood": 5})

# Создание комнат с мебелью
room_dorm = Room("Комната в общаге", "Небольшая, но уютная комната с кроватью и столом.", furniture=[bed, table])
room_corridor = Room("Коридор", "Длинный коридор общежития, пахнет странно.")
room_toilet = Room("Туалет", "Чистый, но холодный туалет.", furniture=[mirror])
room_guard = Room("Вахта", "Место, где сидит вахтер и следит за порядком.")
room_street = Room("Улица", "Свежий воздух и свобода, но холодно.")

# Установка связей между комнатами
room_dorm.doors = [room_corridor]
room_corridor.doors = [room_dorm, room_toilet, room_guard]
room_toilet.doors = [room_corridor]
room_guard.doors = [room_corridor, room_street]
room_street.doors = [room_guard]

# Создание игрока
print("\nВы просыпаетесь и вспоминаете ваше ИМЯ")
name = "Студент-" + input('> ')
player = Player(name)

# Начало игры
player.move(room_dorm)

# Игровой цикл
while True:
    player.show_stats()
    room = player.coords
    room.describe()

    print("\nЧто вы хотите сделать?")
    print("1. Переместиться в другую комнату")
    print("2. Осмотреть комнату")
    try:
        action = int(input("> "))
        if action == 1:
            print("\nКуда вы хотите пойти?")
            for i, door in enumerate(room.doors):
                print(f"{i + 1}. {door.name}")
            try:
                door_choice = int(input("> ")) - 1
                if 0 <= door_choice < len(room.doors):
                    player.move(room.doors[door_choice])
                else:
                    print("Неверный выбор комнаты. \n")
            except ValueError:
                print("Введите число, соответствующее номеру комнаты. \n")
        elif action == 2:
            player.interact_with_furniture()
        else:
            print("Неверный выбор действия. \n")
    except ValueError:
        print("Введите число, соответствующее действию. \n")